steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/final-myaimediamgr-website/myaimediamgr-repo/myaimediamgr-prod:latest', '.']

  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/final-myaimediamgr-website/myaimediamgr-repo/myaimediamgr-prod:latest']

  # Apply database migrations
  - name: 'us-central1-docker.pkg.dev/final-myaimediamgr-website/myaimediamgr-repo/myaimediamgr-prod:latest'
    entrypoint: 'python'
    dir: '/app'
    args: ['-m', 'flask', '--app', 'src/main', 'db', 'upgrade']

  # Seed the admin user
  - name: 'us-central1-docker.pkg.dev/final-myaimediamgr-website/myaimediamgr-repo/myaimediamgr-prod:latest'
    entrypoint: 'python'
    dir: '/app'
    args: ['-m', 'src.seed_admin']
    env:
      - 'FLASK_APP=src/main.py'

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'myaimediamgr-prod'
      - '--image=us-central1-docker.pkg.dev/final-myaimediamgr-website/myaimediamgr-repo/myaimediamgr-prod:latest'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--service-account=myaimediamgr-service@final-myaimediamgr-website.iam.gserviceaccount.com'
      - '--set-env-vars=GOOGLE_PROJECT_ID=final-myaimediamgr-website'

images:
  - 'us-central1-docker.pkg.dev/final-myaimediamgr-website/myaimediamgr-repo/myaimediamgr-prod:latest'

options:
  logging: CLOUD_LOGGING_ONLY
