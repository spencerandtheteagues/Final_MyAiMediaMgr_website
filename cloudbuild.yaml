steps:
  # Step 1: Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/myaimediamgr-repo/myaimediamgr-prod:latest', '.']

  # Step 2: Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/myaimediamgr-repo/myaimediamgr-prod:latest']

  # Step 3: Run Database Migrations using the new image
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud secrets versions access latest --secret="DATABASE_URL" --format='get(payload.data)' | base64 -d > /workspace/db_url.txt
        export DATABASE_URL=$(cat /workspace/db_url.txt)
        docker run --env DATABASE_URL \
          us-central1-docker.pkg.dev/$PROJECT_ID/myaimediamgr-repo/myaimediamgr-prod:latest \
          python -m flask --app src.main db upgrade

  # Step 4: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'myaimediamgr-prod'
      - '--image=us-central1-docker.pkg.dev/$PROJECT_ID/myaimediamgr-repo/myaimediamgr-prod:latest'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--service-account=myaimediamgr-service@final-myaimediamgr-website.iam.gserviceaccount.com'
      - '--set-env-vars=GOOGLE_PROJECT_ID=final-myaimediamgr-website,GEMINI_API_KEY=AIzaSyDthpeK9UNiHEj2VGtmqp-p_rXR01iLXKs'

images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/myaimediamgr-repo/myaimediamgr-prod:latest'

options:
  logging: CLOUD_LOGGING_ONLY

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/DATABASE_URL/versions/latest
    env: 'DATABASE_URL'